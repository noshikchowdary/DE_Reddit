version: '3'

# Common configuration for Airflow services
x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  image: reddit-data-pipeline:2.7.1-python3.9
  env_file:
    - airflow.env
  volumes:
    - ./config:/opt/airflow/config
    - ./dags:/opt/airflow/dags
    - ./data:/opt/airflow/data
    - ./etls:/opt/airflow/etls
    - ./logs:/opt/airflow/logs
    - ./pipelines:/opt/airflow/pipelines
    - ./plugins:/opt/airflow/plugins
    - ./tests:/opt/airflow/tests
    - ./utils:/opt/airflow/utils
    - ./requirements.txt:/opt/airflow/requirements.txt
  depends_on:
    - postgres
    - redis
  restart: unless-stopped

services:
  # PostgreSQL database for Airflow metadata
  postgres:
    image: postgres:12
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-airflow_reddit}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5

  # Redis for Celery broker
  redis:
    image: redis:latest
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  # Airflow initialization
  airflow-init:
    <<: *airflow-common
    command: >
      bash -c "
        pip install -r /opt/airflow/requirements.txt &&
        airflow db init &&
        airflow db upgrade &&
        airflow users create
          --username ${AIRFLOW_ADMIN_USER:-admin}
          --firstname ${AIRFLOW_ADMIN_FIRSTNAME:-Admin}
          --lastname ${AIRFLOW_ADMIN_LASTNAME:-User}
          --role Admin
          --email ${AIRFLOW_ADMIN_EMAIL:-admin@example.com}
          --password ${AIRFLOW_ADMIN_PASSWORD:-admin}
      "
    restart: "no"

  # Airflow webserver
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "${AIRFLOW_WEBSERVER_PORT:-8080}:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  # Airflow scheduler
  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5

  # Airflow worker
  airflow-worker:
    <<: *airflow-common
    command: celery worker
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type CeleryWorkerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5

volumes:
  postgres_data:
  redis_data:
